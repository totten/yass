<?php

/**
 * Test synchronization service
 * 
 * Dependencies:
 * Drupal-SimpleTest 1.x
 */ 

require_once 'YASS/Test.php';
require_once 'tests/YASS_GuidMapper_Test.test';

class YASS_GuidMapper_Proxy_Test extends YASS_GuidMapper_Test {
    function get_info() {
        return array(
            'name' => t('YASS GuidMapper (Proxy)'),
            'desc' => 'Test the GUID mapper (via proxy)',
            'group' => 'YASS'
        );
    }

    function _createReplicas() {
        $localA = $this->createReplica(array('name' => 'localA', 'datastore' => 'GenericSQL', 'syncstore' => 'GenericSQL', 'is_active' => FALSE, 'is_triggered' => TRUE));
        $remoteA = $this->createReplica(array('name' => 'remoteA', 'datastore' => 'Proxy', 'syncstore' => 'Proxy', 'is_active' => TRUE, 'guid_mapper' => 'Proxy', 'remoteSite' => '#local', 'remoteReplica' => 'localA'));
        $localB = $this->createReplica(array('name' => 'localB', 'datastore' => 'GenericSQL', 'syncstore' => 'GenericSQL', 'is_active' => FALSE, 'is_triggered' => TRUE));
        $remoteB = $this->createReplica(array('name' => 'remoteB', 'datastore' => 'Proxy', 'syncstore' => 'Proxy', 'is_active' => TRUE, 'guid_mapper' => 'Proxy', 'remoteSite' => '#local', 'remoteReplica' => 'localB'));
        $this->assertTrue($remoteA->mapper instanceof YASS_GuidMapper_Proxy);
        $this->assertTrue($remoteB->mapper instanceof YASS_GuidMapper_Proxy);
        
        return array(
            $remoteA,
            $remoteB,
        );
    }
    
    function _recreateReplicas() {
        $engine = YASS_Engine::singleton(TRUE);
        return array(
            $engine->getReplicaByName('remoteA'),
            $engine->getReplicaByName('remoteB'),
        );
    }
    
}